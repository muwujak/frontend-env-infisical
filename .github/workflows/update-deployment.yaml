

name: frontend pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on:
      group: default
    env:
      PROJECT_GROUP: homelab
      PROJECT_NAME: frontend-env-infisical
      BUILD_CONTEXT: "{{defaultContext}}"
      MAJOR: "2"
      MINOR: "${{ github.run_number }}"
      PATCH: "${{ github.run_attempt }}"
      REGISTRY_URL: "registry.homelab.mujak.id"
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}


    steps:
      - 
        name: infisical secret
        uses: Infisical/secrets-action@v1.0.7
        with:
          domain: http://infisical-web.infisical.svc
          client-id: "21701a13-eb99-4549-93be-fe896cca3549" # Update this to your own Github references
          client-secret: "bb2e582268276e10f9abbb12329b24cd5fd6a85b59a90a97b9f9ed9eb3ae8f0e" # Update this to your own Github references
          env-slug: "prod"
          project-slug: "homelab-zow2"
          export-type: "file"
          file-output-path: "/.env" # defaults to "/.env"


      # -
      #   name: get secret from self host runner
      #   run: |
      #     cat ${{env.RUNNER_SECRET_PATH}} >> "$GITHUB_ENV"
      #     ${{env.RUNNER_SECRET_PATH}}.mask.sh
      -
        name: mask secret and set env using xargs
        run: |
          echo '
          IMAGE_NAME=${{env.PROJECT_NAME}}-image
          IMAGE_VERSION=${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}
          ' >> "$GITHUB_ENV"

      -
        name: mask secret and set env using xargs
        run: |
          ls -la
          pwd
      # -
      #   name: Login to Docker registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{env.REGISTRY_URL}}
      #     username: ${{env.SECRETS_DOCKER_USERNAME}}
      #     password: ${{env.SECRETS_DOCKER_PASSWORD}}

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{env.BUILD_CONTEXT}}
          push: true
          tags: ${{env.REGISTRY_URL}}/${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
      # -
      #   name: trigger k8s manifest workflow
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     ref: ${{env.MANIFEST_BRANCH}}
      #     workflow: ${{env.MANIFEST_WORKFLOW}}
      #     repo: ${{env.MANIFEST_REPO}}
      #     inputs: '{
      #         "DEPLOYMENT_PATH": "${{env.DEPLOYMENT_PATH}}", 
      #         "PROJECT_NAME": "${{env.PROJECT_NAME}}",
      #         "IMAGE_NAME" : "${{env.IMAGE_NAME}}",
      #         "IMAGE_VERSION" : "${{env.IMAGE_VERSION}}",
      #         "ENVIRONMENT": "${{env.BRANCH_NAME}}"
      #       }'
      #     token: ${{env.SECRETS_K8S_MANIFEST_TOKEN}}